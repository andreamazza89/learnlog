[{"lengthInHours":3.5,"date":"2022-01-28","notes":"figured out the issue with parsing pipes (left recursion), then refactored and started on the interpreter","description":"jq-exercises","tags":["Functional Programming","Purescript","Compiler","jq"]},{"lengthInHours":1,"date":"2022-01-27","notes":"started implementing pipe in the parser, hit a bit of a wall with recursive parsing, have an idea for going past the problem, will try tomorrow","description":"jq-exercises","tags":["Functional Programming","Purescript","Compiler","jq"]},{"lengthInHours":2,"date":"2022-01-25","notes":"readme, separate existing code into modules and read a bit of the jq documentation","description":"jq-exercises","tags":["Functional Programming","Purescript","Compiler","jq"]},{"lengthInHours":1.5,"date":"2022-01-25","notes":"Monolith and Coupling/Cohesion","description":"Monolith to Microservices","tags":["Architecture","Microservices"]},{"lengthInHours":1.5,"date":"2022-01-24","notes":"What are Microservices? independently deployable, they own their own data, not a panacea, etc","description":"Monolith to Microservices","tags":["Architecture","Microservices"]},{"lengthInHours":0.75,"date":"2022-01-21","notes":"Meeting with the book club group - kickoff meeting","description":"Monolith to Microservices","tags":["Architecture","Microservices"]},{"lengthInHours":0.75,"date":"2022-01-21","notes":"went through the table of contents, preface, chapter summaries and index","description":"Monolith to Microservices","tags":["Architecture","Microservices"]},{"lengthInHours":1,"date":"2022-01-21","notes":"Watched lectures on Functor/Applicative - nothing new for me","description":"Advanced Functional Programming with Haskell","tags":["Functional Programming","Haskell"]},{"lengthInHours":3.5,"date":"2022-01-21","notes":"pairing with Andrew - started the project + implemented parser for identity and selector","description":"jq-exercises","tags":["Functional Programming","Purescript","Compiler","jq"]},{"lengthInHours":1.5,"date":"2022-01-20","notes":"Initial thoughts around the project - things I don't know, coming up with questions, etc.","description":"jq-exercises","tags":["Functional Programming","Purescript","Compiler","jq"]},{"lengthInHours":2,"date":"2022-01-20","notes":"Working on connect-four: clean up and wrap up","description":"Advanced Functional Programming with Haskell","tags":["Functional Programming","Haskell"]},{"lengthInHours":2,"date":"2022-01-18","notes":"Working on connect-four: banging my head against a partially working minimax","description":"Advanced Functional Programming with Haskell","tags":["Functional Programming","Haskell"]},{"lengthInHours":1.5,"date":"2022-01-16","notes":"Working on connect-four: Initial crack at the Computer Player","description":"Advanced Functional Programming with Haskell","tags":["Functional Programming","Haskell"]},{"lengthInHours":5,"date":"2022-01-12","notes":"Working on connect-four: Game module and pretty basic UI","description":"Advanced Functional Programming with Haskell","tags":["Functional Programming","Haskell"]},{"lengthInHours":0.5,"date":"2022-01-05","notes":"Started the streaming chapter: why we need the abstraction, what it is and showing a naive implementation","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1.75,"date":"2022-01-05","notes":"Went through the first week, which has an introduction of mathematical proofs, both to prove that something is impossible and also to prove that something is possible by example","description":"Discrete Mathematics for Computer Science","tags":["Computer Science","Discrete Mathematics"]},{"lengthInHours":2,"date":"2021-12-15","notes":"Finished notes on Applicative","description":"Haskell Notebook","tags":["Functional Programming","Haskell"]},{"lengthInHours":2,"date":"2021-12-14","notes":"Initial notes on Applicative","description":"Haskell Notebook","tags":["Functional Programming","Haskell"]},{"lengthInHours":1.5,"date":"2021-12-14","notes":"saving entries","description":"Terminal User interface to visualise and manage this repository","tags":["Functional Programming","Haskell"]},{"lengthInHours":1.5,"date":"2021-12-13","notes":"setting new entry to use today's date + reading entries from file","description":"Terminal User interface to visualise and manage this repository","tags":["Functional Programming","Haskell"]},{"lengthInHours":2,"date":"2021-12-13","notes":"Phantom types, Proxy types","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.5,"date":"2021-12-11","notes":"Haskell types 101 - terms, types and kinds","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":2.5,"date":"2021-12-11","notes":"new log entry based on the selected one + highlighting errors","description":"Terminal User interface to visualise and manage this repository","tags":["Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-12-10","notes":"adding a new log entry","description":"Terminal User interface to visualise and manage this repository","tags":["Functional Programming","Haskell"]},{"lengthInHours":1.5,"date":"2021-12-10","notes":"multiple log entries with highlight","description":"Terminal User interface to visualise and manage this repository","tags":["Functional Programming","Haskell"]},{"lengthInHours":0.75,"date":"2021-12-10","notes":"profiling in GHC and changing implementations for better performance/space usage","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-12-09","notes":"Drawing a single log entry (view mode)","description":"Terminal User interface to visualise and manage this repository","tags":["Functional Programming","Haskell"]},{"lengthInHours":0.5,"date":"2021-12-09","notes":"IAM introduction","description":"AWS Certified Security","tags":["AWS","Security"]},{"lengthInHours":2,"date":"2021-12-09","notes":"Explored the List Widget in Brick and started over with the project (clean slate)","description":"Terminal User interface to visualise and manage this repository","tags":["Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-12-08","notes":"started the chapter on benchmarking with criterion","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":2,"date":"2021-12-07","notes":"Playing with Brick.Forms, next will look into focus/resource names outside the form","description":"Terminal User interface to visualise and manage this repository","tags":["Functional Programming","Haskell"]},{"lengthInHours":0.5,"date":"2021-12-03","notes":"Hello world + trying to figure out how to paint an empty 'div' with colour (I want to build an abstraction to plot charts)","description":"Terminal User interface to visualise and manage this repository","tags":["Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-12-02","notes":"initial setup + installed the main dependency (brick)","description":"Terminal User interface to visualise and manage this repository","tags":["Functional Programming","Haskell"]},{"lengthInHours":0.75,"date":"2021-12-01","notes":"mechanisms to enforce strictness, compiler optimisations (which I glared over)","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.75,"date":"2021-11-29","notes":"a mental model for code/data at runtime (building up to understanding potential optimisations)","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.5,"date":"2021-11-28","notes":"more testing chapter - golden specs","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.5,"date":"2021-11-26","notes":"wrapped up an initial proposed approach and updated the PR to elicit feedback","description":"pandoc","tags":["Haskell","Functional Programming","Open Source"]},{"lengthInHours":1,"date":"2021-11-13","notes":"did some thinking around my first contribution (https://github.com/jgm/pandoc/pull/7325)","description":"pandoc","tags":["Haskell","Functional Programming","Open Source"]},{"lengthInHours":0.5,"date":"2021-11-08","notes":"different architect personalities, leveraging checklists, assessing team size, providing guidance and business justification","description":"Fundamentals of Software Architecture","tags":["Book","Architecture"]},{"lengthInHours":1,"date":"2021-11-06","notes":"did some thinking around my first contribution (https://github.com/jgm/pandoc/pull/7325)","description":"pandoc","tags":["Haskell","Functional Programming","Open Source"]},{"lengthInHours":2,"date":"2021-11-05","notes":"decision anti-patterns, Architecture Decision Records, Team communication","description":"Fundamentals of Software Architecture","tags":["Book","Architecture"]},{"lengthInHours":1,"date":"2021-11-03","notes":"microservices","description":"Fundamentals of Software Architecture","tags":["Book","Architecture"]},{"lengthInHours":1,"date":"2021-11-01","notes":"testing chapter - property-based testing","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-10-24","notes":"more testing chapter - starting to look at tasty and hspec specs","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.75,"date":"2021-10-20","notes":"restarted chapter on testing - looking at the ipfiltering implementation","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-10-16","notes":"Installation instructions","description":"pg-analyze","tags":["Haskell","Database"]},{"lengthInHours":1,"date":"2021-10-15","notes":"Space-based Architecture","description":"Fundamentals of Software Architecture","tags":["Book","Architecture"]},{"lengthInHours":0.75,"date":"2021-10-02","notes":"Event-driven architecture style. Includes two topologies (Broker/Mediator). High complexity is the cost for high scalability/evolutionability/performance","description":"Fundamentals of Software Architecture","tags":["Book","Architecture"]},{"lengthInHours":1,"date":"2021-08-09","notes":"small exercise + some reading","description":"Docker Exercises","tags":["Docker","DevOps"]},{"lengthInHours":0.5,"date":"2021-07-20","notes":"started chapter on testing - looking at the ipfiltering implementation","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-07-18","notes":"Intersection between architecture and... [engineering practices | operations | ...]","description":"Fundamentals of Software Architecture","tags":["Book","Architecture"]},{"lengthInHours":1,"date":"2021-07-17","notes":"Preface - invalidating axioms (as in, it's in constant flux). Introduction - what's expected of an architect","description":"Fundamentals of Software Architecture","tags":["Book","Architecture"]},{"lengthInHours":0.75,"date":"2021-07-16","notes":"quick look at the monad-logger library","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":2,"date":"2021-07-13","notes":"still working through the suntimes example - pretty impressive handling of all error scenarios","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-07-13","notes":"still working through the suntimes example - pretty impressive handling of all error scenarios","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-07-12","notes":"Pagination, modifying data and postgresql explain reference","description":"Sql Performance Explained","tags":["Book","Database"]},{"lengthInHours":0.5,"date":"2021-07-12","notes":"going through the suntimes api example","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-07-12","notes":"Exceptions - can be programmatic or IO-only. Too many options maybs","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-07-11","notes":"Introduces ReaderT to pass the environment around","description":"pg-analyze","tags":["Haskell","Database"]},{"lengthInHours":1,"date":"2021-07-09","notes":"Ch6 - Finished reading the monadTransformers chapter. He makes his own implementation of MaybeT and uses it instead of StateT for the RPN exercise","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.5,"date":"2021-07-08","notes":"Using indexes for ORDER BY clauses (if sorting needs to be in the same order created by the index, then no need for extra step)","description":"Sql Performance Explained","tags":["Book","Database"]},{"lengthInHours":1,"date":"2021-07-06","notes":"Ch6 - Transformer stacks; looking at an example application that traverses directories building up a filetree and file count","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-07-06","notes":"Index-only scans","description":"Sql Performance Explained","tags":["Book","Database"]},{"lengthInHours":1,"date":"2021-07-04","notes":"Join algorithms","description":"Sql Performance Explained","tags":["Book","Database"]},{"lengthInHours":1.5,"date":"2021-06-30","notes":"Ch5 - Transformers. Working through an example that evaluates reverse polish notation using State, but wants to add Maybe to signal errors.","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":2,"date":"2021-06-30","notes":"Added the initialising script (creates directory structure, sample files and hydrates a sample db","description":"pg-analyze","tags":["Haskell","Database"]},{"lengthInHours":1,"date":"2021-06-29","notes":"Ch5 - RWS monad, IORef, STRef, creating the illusion of state, apart from IORef, which actually mutates state","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-06-29","notes":"Performance impacts on scaling volume/load - a 'bad' index might be acceptable and similar to a good one with little volume/load, but when you dial those up, the difference can be shocking","description":"Sql Performance Explained","tags":["Book","Database"]},{"lengthInHours":1.5,"date":"2021-06-29","notes":"First full slice - hydrating the database, using the setup/query in the yaml and writing an explained yaml out","description":"pg-analyze","tags":["Haskell","Database"]},{"lengthInHours":1,"date":"2021-06-28","notes":"Ch5 - Looking at the State monad examples, including the shunting Yard algorithm.","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-06-28","notes":"Played with yaml library to parse test config, realised the db library does not allow 'loaded' strings for queries, so looking at alternative library","description":"pg-analyze","tags":["Haskell","Database"]},{"lengthInHours":1,"date":"2021-06-26","notes":"Figured out they types for SQL returning JSON, reading directory contents and decided to use yml for setup/queries","description":"pg-analyze","tags":["Haskell","Database"]},{"lengthInHours":1,"date":"2021-06-25","notes":"Selected a postgres library, run a few queries against local database, thought through the program functionality","description":"pg-analyze","tags":["Haskell","Database"]},{"lengthInHours":1,"date":"2021-06-17","notes":"Week 10. Setting up a machine learning projects with compose.","description":"Docker Exercises","tags":["Docker","DevOps"]},{"lengthInHours":0.5,"date":"2021-06-15","notes":"When querying with ranges, the rule of thumb is - index for equality first, then ranges. For the LIKE operator, the more characters before the wildcard (%) the better","description":"Sql Performance Explained","tags":["Book","Database"]},{"lengthInHours":1,"date":"2021-06-14","notes":"Ch3 - Working through the implementation of QuoteData / StatReport.","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-06-13","notes":"Ch3 - More analysis of the stock-quote program.","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.5,"date":"2021-06-13","notes":"function-based indexes, also stressing on how important it is to keep stats updated so the optimiser makes the 'right' choice. You can index custom functions, but they have to be pure, so if for instance the function includes a call to now(), it cannot be indexed. When in doubt, use bind parameters. These mean that the optimiser cannot 'see' their value, which is good for caching, but could be bad for unevenly distributed data as there's no access to statistics. However, the security aspect of using bind parameters most often outweighs all other considerations.","description":"Sql Performance Explained","tags":["Book","Database"]},{"lengthInHours":1,"date":"2021-06-13","notes":"Ch2 - Foldable/Traversable. Started looking at the stock quote code.","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-06-12","notes":"Ch2 - numeric classes, then Show/Read. String is very inefficient, use TextShow instead. Recursively TextShowing Expr","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-06-11","notes":"Concatenated indexes: if you have a multi-column index like (A, B), you can query using equality by A && B, by A, but not by B alone. Also, consider that the optimiser uses table statistics and if these are off it can make the wrong decision. Sometimes and INDEX RANGE SCAN can be slower than a full table access if the index scan yields a ton of results","description":"Sql Performance Explained","tags":["Book","Database"]},{"lengthInHours":0.5,"date":"2021-06-11","notes":"Chapter 2: radar code - random generators for the tests","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.5,"date":"2021-06-11","notes":"Chapter 2: radar code - Read/Show, staring to look at the tests","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-06-09","notes":"Chapter 2: radar code - playing around with adding a command type to parse the user input","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.5,"date":"2021-06-08","notes":"Anatomy of an index: Leaf nodes (small blocks joined into a doubly linked list), Balanced Tree. Not sure how you can search for a leaf node from a tree and then also 'navigate' back and forth using the list? At least I'm not sure how you'd od that functionally/immutably","description":"Sql Performance Explained","tags":["Book","Database"]},{"lengthInHours":1,"date":"2021-06-08","notes":"Chapter 2: radar code - pretty cool about cyclic enumerable. Going through type classes. Like that you can load all dependencies for an executable or library with `stack ghci :<exec-name>`. Also pretty cool about using Monoid to summarise a list of Turns","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":1,"date":"2021-06-08","notes":"Week 9. Networks and scaling services in compose","description":"Docker Exercises","tags":["Docker","DevOps"]},{"lengthInHours":0.5,"date":"2021-06-07","notes":"Chapter 1: continues to fly through the 'purification' of the simple program, talks about sorting / GHC extensions and formatting","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.5,"date":"2021-06-06","notes":"Chapter 1: Building on the example for counting words, shows how to better structure the program, shrinking the surface area of the IO functions, as well as how to model problems with types","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.4,"date":"2021-06-06","notes":"Chapter 1: Functions and types. Nothing much - just working through an example counting words in a text file","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]},{"lengthInHours":0.75,"date":"2021-06-06","notes":"Chapter 9: Philosophy.","description":"Data and Reality","tags":["Book","Database"]},{"lengthInHours":0.5,"date":"2021-06-05","notes":"Chapter 8: Record Model. About how the record model is about efficiently storing data rather than representing real data, which poses a number of constraints in reflecting real data","description":"Data and Reality","tags":["Book","Database"]},{"lengthInHours":1,"date":"2021-06-04","notes":"Foreword and introduction. Gives an overview of functional programming, static typing and lazy evaluation; stressing on Haskell's expressiveness and maintainability.","description":"Haskell in Depth","tags":["Book","Functional Programming","Haskell"]}]